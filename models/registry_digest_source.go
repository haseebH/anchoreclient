// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RegistryDigestSource An image reference using a digest in a registry, includes some extra tag and timestamp info in addition to the pull string to allow proper tag history reconstruction.
// swagger:model RegistryDigestSource
type RegistryDigestSource struct {

	// Optional override of the image creation time to support proper tag history construction in cases of out-of-order analysis compared to registry history for the tag
	// Format: date-time
	CreationTimestampOverride strfmt.DateTime `json:"creation_timestamp_override,omitempty"`

	// Content of the dockerfile used to build the image, if available.
	Dockerfile string `json:"dockerfile,omitempty"`

	// A digest-based pullstring (e.g. docker.io/nginx@sha256:123abc)
	Pullstring string `json:"pullstring,omitempty"`

	// A docker pull string (e.g. docker.io/nginx:latest, or docker.io/nginx@sha256:abd) to retrieve the image
	Tag string `json:"tag,omitempty"`
}

// Validate validates this registry digest source
func (m *RegistryDigestSource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationTimestampOverride(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RegistryDigestSource) validateCreationTimestampOverride(formats strfmt.Registry) error {

	if swag.IsZero(m.CreationTimestampOverride) { // not required
		return nil
	}

	if err := validate.FormatOf("creation_timestamp_override", "body", "date-time", m.CreationTimestampOverride.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RegistryDigestSource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegistryDigestSource) UnmarshalBinary(b []byte) error {
	var res RegistryDigestSource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
