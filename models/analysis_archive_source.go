// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AnalysisArchiveSource An image reference in the analysis archive for the purposes of loading analysis from the archive into th working set
// swagger:model AnalysisArchiveSource
type AnalysisArchiveSource struct {

	// The image digest identify the analysis. Archived analyses are based on digest, tag records are restored as analysis is restored.
	// Required: true
	// Pattern: ^sha256:[a-fA-F0-9]{64}$
	Digest *string `json:"digest"`
}

// Validate validates this analysis archive source
func (m *AnalysisArchiveSource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDigest(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AnalysisArchiveSource) validateDigest(formats strfmt.Registry) error {

	if err := validate.Required("digest", "body", m.Digest); err != nil {
		return err
	}

	if err := validate.Pattern("digest", "body", string(*m.Digest), `^sha256:[a-fA-F0-9]{64}$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AnalysisArchiveSource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AnalysisArchiveSource) UnmarshalBinary(b []byte) error {
	var res AnalysisArchiveSource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
