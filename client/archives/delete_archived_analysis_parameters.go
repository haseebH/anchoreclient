// Code generated by go-swagger; DO NOT EDIT.

package archives

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteArchivedAnalysisParams creates a new DeleteArchivedAnalysisParams object
// with the default values initialized.
func NewDeleteArchivedAnalysisParams() *DeleteArchivedAnalysisParams {
	var ()
	return &DeleteArchivedAnalysisParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteArchivedAnalysisParamsWithTimeout creates a new DeleteArchivedAnalysisParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteArchivedAnalysisParamsWithTimeout(timeout time.Duration) *DeleteArchivedAnalysisParams {
	var ()
	return &DeleteArchivedAnalysisParams{

		timeout: timeout,
	}
}

// NewDeleteArchivedAnalysisParamsWithContext creates a new DeleteArchivedAnalysisParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteArchivedAnalysisParamsWithContext(ctx context.Context) *DeleteArchivedAnalysisParams {
	var ()
	return &DeleteArchivedAnalysisParams{

		Context: ctx,
	}
}

// NewDeleteArchivedAnalysisParamsWithHTTPClient creates a new DeleteArchivedAnalysisParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteArchivedAnalysisParamsWithHTTPClient(client *http.Client) *DeleteArchivedAnalysisParams {
	var ()
	return &DeleteArchivedAnalysisParams{
		HTTPClient: client,
	}
}

/*DeleteArchivedAnalysisParams contains all the parameters to send to the API endpoint
for the delete archived analysis operation typically these are written to a http.Request
*/
type DeleteArchivedAnalysisParams struct {

	/*Force*/
	Force *bool
	/*ImageDigest*/
	ImageDigest string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) WithTimeout(timeout time.Duration) *DeleteArchivedAnalysisParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) WithContext(ctx context.Context) *DeleteArchivedAnalysisParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) WithHTTPClient(client *http.Client) *DeleteArchivedAnalysisParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForce adds the force to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) WithForce(force *bool) *DeleteArchivedAnalysisParams {
	o.SetForce(force)
	return o
}

// SetForce adds the force to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) SetForce(force *bool) {
	o.Force = force
}

// WithImageDigest adds the imageDigest to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) WithImageDigest(imageDigest string) *DeleteArchivedAnalysisParams {
	o.SetImageDigest(imageDigest)
	return o
}

// SetImageDigest adds the imageDigest to the delete archived analysis params
func (o *DeleteArchivedAnalysisParams) SetImageDigest(imageDigest string) {
	o.ImageDigest = imageDigest
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteArchivedAnalysisParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Force != nil {

		// query param force
		var qrForce bool
		if o.Force != nil {
			qrForce = *o.Force
		}
		qForce := swag.FormatBool(qrForce)
		if qForce != "" {
			if err := r.SetQueryParam("force", qForce); err != nil {
				return err
			}
		}

	}

	// path param imageDigest
	if err := r.SetPathParam("imageDigest", o.ImageDigest); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
