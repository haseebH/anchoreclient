// Code generated by go-swagger; DO NOT EDIT.

package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/haseebh/anchoreclient/models"
)

// AddCredentialReader is a Reader for the AddCredential structure.
type AddCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddCredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewAddCredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddCredentialOK creates a AddCredentialOK with default headers values
func NewAddCredentialOK() *AddCredentialOK {
	return &AddCredentialOK{}
}

/*AddCredentialOK handles this case with default header values.

Add a credential, overwritting if already exists
*/
type AddCredentialOK struct {
	Payload *models.User
}

func (o *AddCredentialOK) Error() string {
	return fmt.Sprintf("[POST /user/credentials][%d] addCredentialOK  %+v", 200, o.Payload)
}

func (o *AddCredentialOK) GetPayload() *models.User {
	return o.Payload
}

func (o *AddCredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCredentialInternalServerError creates a AddCredentialInternalServerError with default headers values
func NewAddCredentialInternalServerError() *AddCredentialInternalServerError {
	return &AddCredentialInternalServerError{}
}

/*AddCredentialInternalServerError handles this case with default header values.

Internal error
*/
type AddCredentialInternalServerError struct {
	Payload *models.APIErrorResponse
}

func (o *AddCredentialInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user/credentials][%d] addCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *AddCredentialInternalServerError) GetPayload() *models.APIErrorResponse {
	return o.Payload
}

func (o *AddCredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
