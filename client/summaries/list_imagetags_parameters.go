// Code generated by go-swagger; DO NOT EDIT.

package summaries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListImagetagsParams creates a new ListImagetagsParams object
// with the default values initialized.
func NewListImagetagsParams() *ListImagetagsParams {
	var ()
	return &ListImagetagsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListImagetagsParamsWithTimeout creates a new ListImagetagsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListImagetagsParamsWithTimeout(timeout time.Duration) *ListImagetagsParams {
	var ()
	return &ListImagetagsParams{

		timeout: timeout,
	}
}

// NewListImagetagsParamsWithContext creates a new ListImagetagsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListImagetagsParamsWithContext(ctx context.Context) *ListImagetagsParams {
	var ()
	return &ListImagetagsParams{

		Context: ctx,
	}
}

// NewListImagetagsParamsWithHTTPClient creates a new ListImagetagsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListImagetagsParamsWithHTTPClient(client *http.Client) *ListImagetagsParams {
	var ()
	return &ListImagetagsParams{
		HTTPClient: client,
	}
}

/*ListImagetagsParams contains all the parameters to send to the API endpoint
for the list imagetags operation typically these are written to a http.Request
*/
type ListImagetagsParams struct {

	/*XAnchoreAccount
	  An account name to change the resource scope of the request to that account, if permissions allow (admin only)

	*/
	XAnchoreAccount *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list imagetags params
func (o *ListImagetagsParams) WithTimeout(timeout time.Duration) *ListImagetagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list imagetags params
func (o *ListImagetagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list imagetags params
func (o *ListImagetagsParams) WithContext(ctx context.Context) *ListImagetagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list imagetags params
func (o *ListImagetagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list imagetags params
func (o *ListImagetagsParams) WithHTTPClient(client *http.Client) *ListImagetagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list imagetags params
func (o *ListImagetagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXAnchoreAccount adds the xAnchoreAccount to the list imagetags params
func (o *ListImagetagsParams) WithXAnchoreAccount(xAnchoreAccount *string) *ListImagetagsParams {
	o.SetXAnchoreAccount(xAnchoreAccount)
	return o
}

// SetXAnchoreAccount adds the xAnchoreAccount to the list imagetags params
func (o *ListImagetagsParams) SetXAnchoreAccount(xAnchoreAccount *string) {
	o.XAnchoreAccount = xAnchoreAccount
}

// WriteToRequest writes these params to a swagger request
func (o *ListImagetagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XAnchoreAccount != nil {

		// header param x-anchore-account
		if err := r.SetHeaderParam("x-anchore-account", *o.XAnchoreAccount); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
