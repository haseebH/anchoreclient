// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/haseebh/anchoreclient/models"
)

// GetOauthTokenReader is a Reader for the GetOauthToken structure.
type GetOauthTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOauthTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOauthTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetOauthTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOauthTokenOK creates a GetOauthTokenOK with default headers values
func NewGetOauthTokenOK() *GetOauthTokenOK {
	return &GetOauthTokenOK{}
}

/*GetOauthTokenOK handles this case with default header values.

Resulting JWT token
*/
type GetOauthTokenOK struct {
	Payload *models.TokenResponse
}

func (o *GetOauthTokenOK) Error() string {
	return fmt.Sprintf("[POST /oauth/token][%d] getOauthTokenOK  %+v", 200, o.Payload)
}

func (o *GetOauthTokenOK) GetPayload() *models.TokenResponse {
	return o.Payload
}

func (o *GetOauthTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthTokenInternalServerError creates a GetOauthTokenInternalServerError with default headers values
func NewGetOauthTokenInternalServerError() *GetOauthTokenInternalServerError {
	return &GetOauthTokenInternalServerError{}
}

/*GetOauthTokenInternalServerError handles this case with default header values.

Internal error
*/
type GetOauthTokenInternalServerError struct {
	Payload *models.APIErrorResponse
}

func (o *GetOauthTokenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /oauth/token][%d] getOauthTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOauthTokenInternalServerError) GetPayload() *models.APIErrorResponse {
	return o.Payload
}

func (o *GetOauthTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
