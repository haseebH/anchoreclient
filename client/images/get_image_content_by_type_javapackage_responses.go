// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/haseebh/anchoreclient/models"
)

// GetImageContentByTypeJavapackageReader is a Reader for the GetImageContentByTypeJavapackage structure.
type GetImageContentByTypeJavapackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetImageContentByTypeJavapackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetImageContentByTypeJavapackageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetImageContentByTypeJavapackageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetImageContentByTypeJavapackageOK creates a GetImageContentByTypeJavapackageOK with default headers values
func NewGetImageContentByTypeJavapackageOK() *GetImageContentByTypeJavapackageOK {
	return &GetImageContentByTypeJavapackageOK{}
}

/*GetImageContentByTypeJavapackageOK handles this case with default header values.

Content of specified type from the image
*/
type GetImageContentByTypeJavapackageOK struct {
	Payload *models.ContentJAVAPackageResponse
}

func (o *GetImageContentByTypeJavapackageOK) Error() string {
	return fmt.Sprintf("[GET /images/{imageDigest}/content/java][%d] getImageContentByTypeJavapackageOK  %+v", 200, o.Payload)
}

func (o *GetImageContentByTypeJavapackageOK) GetPayload() *models.ContentJAVAPackageResponse {
	return o.Payload
}

func (o *GetImageContentByTypeJavapackageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentJAVAPackageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImageContentByTypeJavapackageInternalServerError creates a GetImageContentByTypeJavapackageInternalServerError with default headers values
func NewGetImageContentByTypeJavapackageInternalServerError() *GetImageContentByTypeJavapackageInternalServerError {
	return &GetImageContentByTypeJavapackageInternalServerError{}
}

/*GetImageContentByTypeJavapackageInternalServerError handles this case with default header values.

Internal error
*/
type GetImageContentByTypeJavapackageInternalServerError struct {
	Payload *models.APIErrorResponse
}

func (o *GetImageContentByTypeJavapackageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /images/{imageDigest}/content/java][%d] getImageContentByTypeJavapackageInternalServerError  %+v", 500, o.Payload)
}

func (o *GetImageContentByTypeJavapackageInternalServerError) GetPayload() *models.APIErrorResponse {
	return o.Payload
}

func (o *GetImageContentByTypeJavapackageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
