// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetImageContentByTypeImageIDFilesParams creates a new GetImageContentByTypeImageIDFilesParams object
// with the default values initialized.
func NewGetImageContentByTypeImageIDFilesParams() *GetImageContentByTypeImageIDFilesParams {
	var ()
	return &GetImageContentByTypeImageIDFilesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetImageContentByTypeImageIDFilesParamsWithTimeout creates a new GetImageContentByTypeImageIDFilesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetImageContentByTypeImageIDFilesParamsWithTimeout(timeout time.Duration) *GetImageContentByTypeImageIDFilesParams {
	var ()
	return &GetImageContentByTypeImageIDFilesParams{

		timeout: timeout,
	}
}

// NewGetImageContentByTypeImageIDFilesParamsWithContext creates a new GetImageContentByTypeImageIDFilesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetImageContentByTypeImageIDFilesParamsWithContext(ctx context.Context) *GetImageContentByTypeImageIDFilesParams {
	var ()
	return &GetImageContentByTypeImageIDFilesParams{

		Context: ctx,
	}
}

// NewGetImageContentByTypeImageIDFilesParamsWithHTTPClient creates a new GetImageContentByTypeImageIDFilesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetImageContentByTypeImageIDFilesParamsWithHTTPClient(client *http.Client) *GetImageContentByTypeImageIDFilesParams {
	var ()
	return &GetImageContentByTypeImageIDFilesParams{
		HTTPClient: client,
	}
}

/*GetImageContentByTypeImageIDFilesParams contains all the parameters to send to the API endpoint
for the get image content by type image Id files operation typically these are written to a http.Request
*/
type GetImageContentByTypeImageIDFilesParams struct {

	/*ImageID*/
	ImageID string
	/*XAnchoreAccount
	  An account name to change the resource scope of the request to that account, if permissions allow (admin only)

	*/
	XAnchoreAccount *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) WithTimeout(timeout time.Duration) *GetImageContentByTypeImageIDFilesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) WithContext(ctx context.Context) *GetImageContentByTypeImageIDFilesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) WithHTTPClient(client *http.Client) *GetImageContentByTypeImageIDFilesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImageID adds the imageID to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) WithImageID(imageID string) *GetImageContentByTypeImageIDFilesParams {
	o.SetImageID(imageID)
	return o
}

// SetImageID adds the imageId to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) SetImageID(imageID string) {
	o.ImageID = imageID
}

// WithXAnchoreAccount adds the xAnchoreAccount to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) WithXAnchoreAccount(xAnchoreAccount *string) *GetImageContentByTypeImageIDFilesParams {
	o.SetXAnchoreAccount(xAnchoreAccount)
	return o
}

// SetXAnchoreAccount adds the xAnchoreAccount to the get image content by type image Id files params
func (o *GetImageContentByTypeImageIDFilesParams) SetXAnchoreAccount(xAnchoreAccount *string) {
	o.XAnchoreAccount = xAnchoreAccount
}

// WriteToRequest writes these params to a swagger request
func (o *GetImageContentByTypeImageIDFilesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param imageId
	if err := r.SetPathParam("imageId", o.ImageID); err != nil {
		return err
	}

	if o.XAnchoreAccount != nil {

		// header param x-anchore-account
		if err := r.SetHeaderParam("x-anchore-account", *o.XAnchoreAccount); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
