// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/haseebh/anchoreclient/models"
)

// ListImageMetadataReader is a Reader for the ListImageMetadata structure.
type ListImageMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListImageMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListImageMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListImageMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListImageMetadataOK creates a ListImageMetadataOK with default headers values
func NewListImageMetadataOK() *ListImageMetadataOK {
	return &ListImageMetadataOK{}
}

/*ListImageMetadataOK handles this case with default header values.

Metadata listing for the image
*/
type ListImageMetadataOK struct {
	Payload []string
}

func (o *ListImageMetadataOK) Error() string {
	return fmt.Sprintf("[GET /images/{imageDigest}/metadata][%d] listImageMetadataOK  %+v", 200, o.Payload)
}

func (o *ListImageMetadataOK) GetPayload() []string {
	return o.Payload
}

func (o *ListImageMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListImageMetadataInternalServerError creates a ListImageMetadataInternalServerError with default headers values
func NewListImageMetadataInternalServerError() *ListImageMetadataInternalServerError {
	return &ListImageMetadataInternalServerError{}
}

/*ListImageMetadataInternalServerError handles this case with default header values.

Internal Error
*/
type ListImageMetadataInternalServerError struct {
	Payload *models.APIErrorResponse
}

func (o *ListImageMetadataInternalServerError) Error() string {
	return fmt.Sprintf("[GET /images/{imageDigest}/metadata][%d] listImageMetadataInternalServerError  %+v", 500, o.Payload)
}

func (o *ListImageMetadataInternalServerError) GetPayload() *models.APIErrorResponse {
	return o.Payload
}

func (o *ListImageMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
