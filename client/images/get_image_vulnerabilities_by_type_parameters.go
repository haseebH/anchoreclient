// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetImageVulnerabilitiesByTypeParams creates a new GetImageVulnerabilitiesByTypeParams object
// with the default values initialized.
func NewGetImageVulnerabilitiesByTypeParams() *GetImageVulnerabilitiesByTypeParams {
	var ()
	return &GetImageVulnerabilitiesByTypeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetImageVulnerabilitiesByTypeParamsWithTimeout creates a new GetImageVulnerabilitiesByTypeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetImageVulnerabilitiesByTypeParamsWithTimeout(timeout time.Duration) *GetImageVulnerabilitiesByTypeParams {
	var ()
	return &GetImageVulnerabilitiesByTypeParams{

		timeout: timeout,
	}
}

// NewGetImageVulnerabilitiesByTypeParamsWithContext creates a new GetImageVulnerabilitiesByTypeParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetImageVulnerabilitiesByTypeParamsWithContext(ctx context.Context) *GetImageVulnerabilitiesByTypeParams {
	var ()
	return &GetImageVulnerabilitiesByTypeParams{

		Context: ctx,
	}
}

// NewGetImageVulnerabilitiesByTypeParamsWithHTTPClient creates a new GetImageVulnerabilitiesByTypeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetImageVulnerabilitiesByTypeParamsWithHTTPClient(client *http.Client) *GetImageVulnerabilitiesByTypeParams {
	var ()
	return &GetImageVulnerabilitiesByTypeParams{
		HTTPClient: client,
	}
}

/*GetImageVulnerabilitiesByTypeParams contains all the parameters to send to the API endpoint
for the get image vulnerabilities by type operation typically these are written to a http.Request
*/
type GetImageVulnerabilitiesByTypeParams struct {

	/*ForceRefresh*/
	ForceRefresh *bool
	/*ImageDigest*/
	ImageDigest string
	/*VendorOnly*/
	VendorOnly *bool
	/*Vtype*/
	Vtype string
	/*XAnchoreAccount
	  An account name to change the resource scope of the request to that account, if permissions allow (admin only)

	*/
	XAnchoreAccount *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) WithTimeout(timeout time.Duration) *GetImageVulnerabilitiesByTypeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) WithContext(ctx context.Context) *GetImageVulnerabilitiesByTypeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) WithHTTPClient(client *http.Client) *GetImageVulnerabilitiesByTypeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForceRefresh adds the forceRefresh to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) WithForceRefresh(forceRefresh *bool) *GetImageVulnerabilitiesByTypeParams {
	o.SetForceRefresh(forceRefresh)
	return o
}

// SetForceRefresh adds the forceRefresh to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) SetForceRefresh(forceRefresh *bool) {
	o.ForceRefresh = forceRefresh
}

// WithImageDigest adds the imageDigest to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) WithImageDigest(imageDigest string) *GetImageVulnerabilitiesByTypeParams {
	o.SetImageDigest(imageDigest)
	return o
}

// SetImageDigest adds the imageDigest to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) SetImageDigest(imageDigest string) {
	o.ImageDigest = imageDigest
}

// WithVendorOnly adds the vendorOnly to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) WithVendorOnly(vendorOnly *bool) *GetImageVulnerabilitiesByTypeParams {
	o.SetVendorOnly(vendorOnly)
	return o
}

// SetVendorOnly adds the vendorOnly to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) SetVendorOnly(vendorOnly *bool) {
	o.VendorOnly = vendorOnly
}

// WithVtype adds the vtype to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) WithVtype(vtype string) *GetImageVulnerabilitiesByTypeParams {
	o.SetVtype(vtype)
	return o
}

// SetVtype adds the vtype to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) SetVtype(vtype string) {
	o.Vtype = vtype
}

// WithXAnchoreAccount adds the xAnchoreAccount to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) WithXAnchoreAccount(xAnchoreAccount *string) *GetImageVulnerabilitiesByTypeParams {
	o.SetXAnchoreAccount(xAnchoreAccount)
	return o
}

// SetXAnchoreAccount adds the xAnchoreAccount to the get image vulnerabilities by type params
func (o *GetImageVulnerabilitiesByTypeParams) SetXAnchoreAccount(xAnchoreAccount *string) {
	o.XAnchoreAccount = xAnchoreAccount
}

// WriteToRequest writes these params to a swagger request
func (o *GetImageVulnerabilitiesByTypeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ForceRefresh != nil {

		// query param force_refresh
		var qrForceRefresh bool
		if o.ForceRefresh != nil {
			qrForceRefresh = *o.ForceRefresh
		}
		qForceRefresh := swag.FormatBool(qrForceRefresh)
		if qForceRefresh != "" {
			if err := r.SetQueryParam("force_refresh", qForceRefresh); err != nil {
				return err
			}
		}

	}

	// path param imageDigest
	if err := r.SetPathParam("imageDigest", o.ImageDigest); err != nil {
		return err
	}

	if o.VendorOnly != nil {

		// query param vendor_only
		var qrVendorOnly bool
		if o.VendorOnly != nil {
			qrVendorOnly = *o.VendorOnly
		}
		qVendorOnly := swag.FormatBool(qrVendorOnly)
		if qVendorOnly != "" {
			if err := r.SetQueryParam("vendor_only", qVendorOnly); err != nil {
				return err
			}
		}

	}

	// path param vtype
	if err := r.SetPathParam("vtype", o.Vtype); err != nil {
		return err
	}

	if o.XAnchoreAccount != nil {

		// header param x-anchore-account
		if err := r.SetHeaderParam("x-anchore-account", *o.XAnchoreAccount); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
