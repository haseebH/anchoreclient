// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/haseebh/anchoreclient/models"
)

// GetImageMetadataByTypeReader is a Reader for the GetImageMetadataByType structure.
type GetImageMetadataByTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetImageMetadataByTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetImageMetadataByTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetImageMetadataByTypeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetImageMetadataByTypeOK creates a GetImageMetadataByTypeOK with default headers values
func NewGetImageMetadataByTypeOK() *GetImageMetadataByTypeOK {
	return &GetImageMetadataByTypeOK{}
}

/*GetImageMetadataByTypeOK handles this case with default header values.

Metadata of specified type from the image
*/
type GetImageMetadataByTypeOK struct {
	Payload *models.MetadataResponse
}

func (o *GetImageMetadataByTypeOK) Error() string {
	return fmt.Sprintf("[GET /images/{imageDigest}/metadata/{mtype}][%d] getImageMetadataByTypeOK  %+v", 200, o.Payload)
}

func (o *GetImageMetadataByTypeOK) GetPayload() *models.MetadataResponse {
	return o.Payload
}

func (o *GetImageMetadataByTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImageMetadataByTypeInternalServerError creates a GetImageMetadataByTypeInternalServerError with default headers values
func NewGetImageMetadataByTypeInternalServerError() *GetImageMetadataByTypeInternalServerError {
	return &GetImageMetadataByTypeInternalServerError{}
}

/*GetImageMetadataByTypeInternalServerError handles this case with default header values.

Internal error
*/
type GetImageMetadataByTypeInternalServerError struct {
	Payload *models.APIErrorResponse
}

func (o *GetImageMetadataByTypeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /images/{imageDigest}/metadata/{mtype}][%d] getImageMetadataByTypeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetImageMetadataByTypeInternalServerError) GetPayload() *models.APIErrorResponse {
	return o.Payload
}

func (o *GetImageMetadataByTypeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
